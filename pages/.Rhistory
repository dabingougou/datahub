ggplot(aes(x = worker_density)) +
geom_histogram(bins=100, aes(y=..density..)) +
xlim(c(0, 25))
mod1 <-
lm(wage ~ worker_density, data = train_dat)
mod1 <-
lm(wage ~ worker_density, data = train_data)
mod1 <-
lm(median_wage ~ worker_density, data = train_data)
summary(mod1)
# Data pipeline
# US Census API library
library(tidycensus)
library(tidyverse)
#library(geojsonio)
# Library for shape files
#library(sf)
#library(scales)
#library(htmltools)
#library(htmlwidgets)
# Library to read Census shape files
library(tigris)
#library(leaflet)
library(knitr)
# census_api_key('a22e52a2d1b1c6c403b1508183a23ce97b59172d', install=TRUE)
# Load ACS data for population estimates
# Population
population <- get_acs(
geography = "county",
variables = "B01003_001",  # Total population
year = 2021,
survey = "acs5") %>%
rename(population = estimate) %>%
select(-variable, -moe)
# Number of workers
worker_population <- get_acs(
geography = "county",
variables = "B23025_005",
year = 2021,
survey = "acs5") %>%
rename(workers = estimate) %>%
select(-NAME, -variable, -moe)
# Median wage income
wages <- get_acs(
geography = "county",
variables = "B20002_001",
year = 2021,
survey = "acs5") %>%
rename(median_wage = estimate) %>%
select(-NAME, -variable, -moe)
# Household size
avg_household_size <- get_acs(
geography = "county",
variables = "B25010_001",
year = 2021,
survey = "acs5") %>%
rename(household_size = estimate) %>%
select(-NAME, -variable, -moe)
# Household income
median_household_income <- get_acs(
geography = "county",
variables = "B19013_001",
year = 2021,
survey = "acs5") %>%
rename(median_household_income = estimate) %>%
select(-NAME, -variable, -moe)
# Vehicle ownership
vehicle <- get_acs(
geography = "county",
variables = c(
total_households = "B25044_001",
no_vehicle = "B25044_003",
one_vehicle = "B25044_004",
two_vehicles = "B25044_005",
three_vehicles = "B25044_006",
four_or_more_vehicles = "B25044_007"),
year = 2021,
survey = "acs5") %>%
select(GEOID, variable, estimate) %>%
pivot_wider(names_from = variable,
values_from = estimate) %>%
mutate(vehicle_per_hh =
(no_vehicle * 0 +
one_vehicle * 1 +
two_vehicles * 2 +
three_vehicles * 3 +
four_or_more_vehicles * 4) /
total_households) %>%
select(GEOID, vehicle_per_hh)
# Education
education<- get_acs(
geography = "county",
variables = c(
total_population_25_over = "B15003_001",
bachelor = "B15003_022",
master = "B15003_023",
professional = "B15003_024",
doctoral = "B15003_025"),
year = 2021,
survey = "acs5") %>%
select(GEOID, variable, estimate) %>%
pivot_wider(names_from = variable,
values_from = estimate) %>%
mutate(
college_or_higher = bachelor +
master +
professional +
doctoral,
proportion_college_or_higher = college_or_higher / total_population_25_over) %>%
select(GEOID,
college_or_higher,
proportion_college_or_higher)
# Housing price
housing_values <- get_acs(
geography = "county",
variables = c(median_housing_value = "B25077_001"),
year = 2021,
survey = "acs5") %>%
select(GEOID, estimate) %>%
rename(median_housing_price = estimate)
# Land area of all counties
options(tigris_use_cache = TRUE)  # Cache shapefiles for reuse
# Download county shapefiles
counties <- counties(year = 2021)
# Calculate land area in square kilometers
counties <- counties %>%
mutate(land_area_sqkm = ALAND / 1e6)  # m² to km²
county_land_area <- counties %>%
select(GEOID, land_area_sqkm)
##
# Putting everything together
##
census_county <- population %>%
left_join(worker_population, by = 'GEOID') %>%
left_join(wages, by = 'GEOID') %>%
left_join(avg_household_size, by='GEOID') %>%
left_join(median_household_income, by = 'GEOID') %>%
mutate(per_person_income = median_household_income /
household_size) %>%
left_join(vehicle, by = 'GEOID') %>%
left_join(education, by = 'GEOID') %>%
left_join(housing_values, by = 'GEOID') %>%
left_join(county_land_area, by = 'GEOID') %>%
mutate(worker_density = workers /
land_area_sqkm,
ln_wage = log(median_wage),
ln_density = log(worker_density),
ln_housing_price = log(median_housing_price),
ln_income = log(per_person_income))
set.seed(1)
shuffled_census_county <- census_county[sample(nrow(census_county)), ]
train_size = 0.3
train_rows = floor(train_size * nrow(census_county))
train_data = shuffled_census_county[1:train_rows, ]
test_data = shuffled_census_county[(train_rows + 1):nrow(census_county), ]
mod1 <-
lm(median_wage ~ worker_density, data = train_data)
summary(mod1)
# mod2:
mod2 <-
lm(median_wage ~ worker_density, data = train_data)
summary(mod1)
mod1 <-
lm(median_wage ~ worker_density, data = train_data)
summary(mod1)
# mod2:
mod2 <-
lm(ln_wage ~ ln_density, data = train_data)
e
is_neg_if <- census_county$ln_density == -Inf
sum(is_neg_if)
# 23 -Inf ln_density
is_neg_if <- census_county$ln_wage == -Inf
sum(is_neg_if)
is_neg_if <- census_county$ln_housing_price == -Inf
sum(is_neg_if)
is_neg_if <- census_county$ln_per_person_income == -Inf
is_neg_if <- census_county$ln_income == -Inf
sum(is_neg_if)
# Data pipeline
# US Census API library
library(tidycensus)
library(tidyverse)
#library(geojsonio)
# Library for shape files
#library(sf)
#library(scales)
#library(htmltools)
#library(htmlwidgets)
# Library to read Census shape files
library(tigris)
#library(leaflet)
library(knitr)
# census_api_key('a22e52a2d1b1c6c403b1508183a23ce97b59172d', install=TRUE)
# Load ACS data for population estimates
# Population
population <- get_acs(
geography = "county",
variables = "B01003_001",  # Total population
year = 2021,
survey = "acs5") %>%
rename(population = estimate) %>%
select(-variable, -moe)
# Number of workers
worker_population <- get_acs(
geography = "county",
variables = "B23025_005",
year = 2021,
survey = "acs5") %>%
rename(workers = estimate) %>%
select(-NAME, -variable, -moe)
# Median wage income
wages <- get_acs(
geography = "county",
variables = "B20002_001",
year = 2021,
survey = "acs5") %>%
rename(median_wage = estimate) %>%
select(-NAME, -variable, -moe)
# Household size
avg_household_size <- get_acs(
geography = "county",
variables = "B25010_001",
year = 2021,
survey = "acs5") %>%
rename(household_size = estimate) %>%
select(-NAME, -variable, -moe)
# Household income
median_household_income <- get_acs(
geography = "county",
variables = "B19013_001",
year = 2021,
survey = "acs5") %>%
rename(median_household_income = estimate) %>%
select(-NAME, -variable, -moe)
# Vehicle ownership
vehicle <- get_acs(
geography = "county",
variables = c(
total_households = "B25044_001",
no_vehicle = "B25044_003",
one_vehicle = "B25044_004",
two_vehicles = "B25044_005",
three_vehicles = "B25044_006",
four_or_more_vehicles = "B25044_007"),
year = 2021,
survey = "acs5") %>%
select(GEOID, variable, estimate) %>%
pivot_wider(names_from = variable,
values_from = estimate) %>%
mutate(vehicle_per_hh =
(no_vehicle * 0 +
one_vehicle * 1 +
two_vehicles * 2 +
three_vehicles * 3 +
four_or_more_vehicles * 4) /
total_households) %>%
select(GEOID, vehicle_per_hh)
# Education
education<- get_acs(
geography = "county",
variables = c(
total_population_25_over = "B15003_001",
bachelor = "B15003_022",
master = "B15003_023",
professional = "B15003_024",
doctoral = "B15003_025"),
year = 2021,
survey = "acs5") %>%
select(GEOID, variable, estimate) %>%
pivot_wider(names_from = variable,
values_from = estimate) %>%
mutate(
college_or_higher = bachelor +
master +
professional +
doctoral,
proportion_college_or_higher = college_or_higher / total_population_25_over) %>%
select(GEOID,
college_or_higher,
proportion_college_or_higher)
# Housing price
housing_values <- get_acs(
geography = "county",
variables = c(median_housing_value = "B25077_001"),
year = 2021,
survey = "acs5") %>%
select(GEOID, estimate) %>%
rename(median_housing_price = estimate)
# Land area of all counties
options(tigris_use_cache = TRUE)  # Cache shapefiles for reuse
# Download county shapefiles
counties <- counties(year = 2021)
# Calculate land area in square kilometers
counties <- counties %>%
mutate(land_area_sqkm = ALAND / 1e6)  # m² to km²
county_land_area <- counties %>%
select(GEOID, land_area_sqkm)
##
# Putting everything together
##
census_county <- population %>%
left_join(worker_population, by = 'GEOID') %>%
left_join(wages, by = 'GEOID') %>%
left_join(avg_household_size, by='GEOID') %>%
left_join(median_household_income, by = 'GEOID') %>%
mutate(per_person_income = median_household_income /
household_size) %>%
left_join(vehicle, by = 'GEOID') %>%
left_join(education, by = 'GEOID') %>%
left_join(housing_values, by = 'GEOID') %>%
left_join(county_land_area, by = 'GEOID') %>%
mutate(worker_density = workers /
land_area_sqkm,
ln_wage = log(median_wage),
ln_density = log(worker_density),
ln_housing_price = log(median_housing_price),
ln_income = log(per_person_income))
census_county<-
census_county[census_county$ln_density != -Inf
& !is.na(census_county$ln_wage), ]
census_county
set.seed(1)
shuffled_census_county <- census_county[sample(nrow(census_county)), ]
train_size = 0.3
train_rows = floor(train_size * nrow(census_county))
train_data = shuffled_census_county[1:train_rows, ]
train_data = shuffled_census_county[1:train_rows, ]
test_data = shuffled_census_county[(train_rows + 1):nrow(census_county), ]
mod1 <-
lm(median_wage ~ worker_density, data = train_data)
summary(mod1)
# mod2:
mod2 <-
lm(ln_wage ~ ln_density, data = train_data)
summary(mod1)
summary(mod2)
# mod3:
mod3 <-
lm(ln_wage ~ ln_density + population, data = train_data)
# mod3:
mod3 <-
lm(ln_wage ~ ln_density + population, data = train_data)
summary(mod3)
# mod3:
mod3 <-
lm(ln_wage ~ ln_density + proportion_college_or_higher, data = train_data)
summary(mod3)
# mod4:
mod4 <-
lm(ln_wage ~ ln_density + proportion_college_or_higher + ln_housing_price, data = train_data)
summary(mod4)
# mod5:
mod5 <-
lm(ln_wage ~ ln_density + proportion_college_or_higher + ln_housing_price + population, data = train_data)
summary(mod5)
# mod5:
mod5 <-
lm(ln_wage ~ ln_density + college_or_higher + ln_housing_price + population, data = train_data)
summary(mod5)
# mod5:
mod5 <-
lm(ln_wage ~ ln_density + college_or_higher + ln_housing_price, data = train_data)
summary(mod5)
library(stargazer)
# Create a table with stargazer
stargazer(mod2, mod3, mod4, mod5, type = "text",
column.labels = c("Model 2", "Model 3", "Model 4", "Model 5"),
digits = 3, out = "model_comparison.txt")
# Data pipeline
# US Census API library
library(tidycensus)
library(tidyverse)
#library(geojsonio)
# Library for shape files
#library(sf)
#library(scales)
#library(htmltools)
#library(htmlwidgets)
# Library to read Census shape files
library(tigris)
#library(leaflet)
library(knitr)
# census_api_key('a22e52a2d1b1c6c403b1508183a23ce97b59172d', install=TRUE)
# Load ACS data for population estimates
# Population
population <- get_acs(
geography = "county",
variables = "B01003_001",  # Total population
year = 2021,
survey = "acs5") %>%
rename(population = estimate) %>%
select(-variable, -moe)
# Number of workers
worker_population <- get_acs(
geography = "county",
variables = "B23025_005",
year = 2021,
survey = "acs5") %>%
rename(workers = estimate) %>%
select(-NAME, -variable, -moe)
# Median wage income
wages <- get_acs(
geography = "county",
variables = "B20002_001",
year = 2021,
survey = "acs5") %>%
rename(median_wage = estimate) %>%
select(-NAME, -variable, -moe)
# Household size
avg_household_size <- get_acs(
geography = "county",
variables = "B25010_001",
year = 2021,
survey = "acs5") %>%
rename(household_size = estimate) %>%
select(-NAME, -variable, -moe)
# Household income
median_household_income <- get_acs(
geography = "county",
variables = "B19013_001",
year = 2021,
survey = "acs5") %>%
rename(median_household_income = estimate) %>%
select(-NAME, -variable, -moe)
# Vehicle ownership
vehicle <- get_acs(
geography = "county",
variables = c(
total_households = "B25044_001",
no_vehicle = "B25044_003",
one_vehicle = "B25044_004",
two_vehicles = "B25044_005",
three_vehicles = "B25044_006",
four_or_more_vehicles = "B25044_007"),
year = 2021,
survey = "acs5") %>%
select(GEOID, variable, estimate) %>%
pivot_wider(names_from = variable,
values_from = estimate) %>%
mutate(vehicle_per_hh =
(no_vehicle * 0 +
one_vehicle * 1 +
two_vehicles * 2 +
three_vehicles * 3 +
four_or_more_vehicles * 4) /
total_households) %>%
select(GEOID, vehicle_per_hh)
# Education
education<- get_acs(
geography = "county",
variables = c(
total_population_25_over = "B15003_001",
bachelor = "B15003_022",
master = "B15003_023",
professional = "B15003_024",
doctoral = "B15003_025"),
year = 2021,
survey = "acs5") %>%
select(GEOID, variable, estimate) %>%
pivot_wider(names_from = variable,
values_from = estimate) %>%
mutate(
college_or_higher = bachelor +
master +
professional +
doctoral,
proportion_college_or_higher = college_or_higher / total_population_25_over) %>%
select(GEOID,
college_or_higher,
proportion_college_or_higher)
# Housing price
housing_values <- get_acs(
geography = "county",
variables = c(median_housing_value = "B25077_001"),
year = 2021,
survey = "acs5") %>%
select(GEOID, estimate) %>%
rename(median_housing_price = estimate)
# Land area of all counties
options(tigris_use_cache = TRUE)  # Cache shapefiles for reuse
# Download county shapefiles
counties <- counties(year = 2021)
# Calculate land area in square kilometers
counties <- counties %>%
mutate(land_area_sqkm = ALAND / 1e6)  # m² to km²
county_land_area <- counties %>%
select(GEOID, land_area_sqkm)
##
# Putting everything together
##
census_county <- population %>%
left_join(worker_population, by = 'GEOID') %>%
left_join(wages, by = 'GEOID') %>%
left_join(avg_household_size, by='GEOID') %>%
left_join(median_household_income, by = 'GEOID') %>%
mutate(per_person_income = median_household_income /
household_size) %>%
left_join(vehicle, by = 'GEOID') %>%
left_join(education, by = 'GEOID') %>%
left_join(housing_values, by = 'GEOID') %>%
left_join(county_land_area, by = 'GEOID') %>%
mutate(worker_density = workers /
land_area_sqkm,
ln_wage = log(median_wage),
ln_density = log(worker_density),
ln_housing_price = log(median_housing_price),
ln_income = log(per_person_income))
census_county<-
census_county[census_county$ln_density != -Inf
& !is.na(census_county$ln_wage), ]
census_county
